19.02.24=======================Github======================= 
Git - это распределенная система контроля версий. Предназначена для отслеживания и введения истории и изменения файлов, в вашем проекте

Github - это соц сеть/сайт куда можно загружать всё что находится на нашем ноутбуке, чтоб другие люди могли посмотреть на мой проект и стянуть(скачать) к себе

1. git init - чтобы создать скрытую директорию (.git)
2. git add . - просматривает измненеия в нашем проекте (. -весь проект/ name - определлую директорию) и добавляет в промежточное пространство (index)
3. git commit -m 'massage' - фиксирует изменения из индекса в локальный репазиторий (хранилище)
4. git remote add {name of связки/origin} связывает локальный и удалённый
5. git push {name of связки/origin main либо master} - отправляет изменения из локального в удалённый репазиторий 
6. git pull origin master либо main -  отправляет изменения из удалённого в локальный репазиторий

Закидываем изменения в готовый репазиторий
1. git add git_github.txt (название файла) 
2. git commit -m 'update file -  git_github.txt(на английском)' 
3. git push origin master либо main 

Стягиваем изменения из удалённого репазитория
1. git clone {ссылка file}
2. git pull origin master 

20.02.24=======================Github======================= 
Создать удаленную ветку
git merge - соединять удалённую ветку с локальной веткой

branch - ветка(версия проекта) чтоб разрабатывать свой функционал отдельно от других разработчиков / посмотреть в какой ветке мы находимся
локальная ветка, удаленная ветка, вы можете связать их (работая с git pull/git push)

git branch - список веткой
git checkout name - cjplfybt dtnrb  name
git checkout {name}- переключение между ветками
git merge name1 name2 - соединяет 2 ветки
git merge anme1 - соединяет ветки(если мы уже в name2 находимся)
git log - история коммита
git branch -b {new_branch} {commit_key} - откатиться на старую ветку -> надо создать новую ветку

# Зафиксированное(committed) - файл уже сохранен в вашей локальной бд
# Измененное (modified)- файлы которые поменялись но не зафиксированны
# Подготовленное (staged) - измененные файлы отмеченные для включения в след коммит

